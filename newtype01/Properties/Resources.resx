<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="Columns" xml:space="preserve">
    <value>SELECT
    b.name as "tableName",
    a.name as "columnName",
    c.name as "type",
    a.column_id as "order",
    a.max_length as "length",
    a.precision,
    a.scale,
    case
        when a.is_nullable = 0
        then '×'
        else '○'
    end as "boolnull",
    case
        when a.is_identity = 0
        then '×'
        else '○'
    end as "オートナンバー",
    case
        when a.default_object_id = 0
        then '×'
        else d.definition
    end as 'デフォルト値',
    case
        when f.index_column_id is not null
        AND e.is_primary_key = 1
        then 'PK'
        else '×'
    end as 'PK'
FROM
    sys.columns as a
Left outer JOIN
    sys.objects as b
ON
    a.object_id = b.object_id
Left outer JOIN
    sys.types as c
ON
    a.system_type_id = c.system_type_id
Left outer JOIN
    sys.default_constraints as d
ON
    a.default_object_id = d.object_id
Left outer JOIN
    sys.indexes as e
ON
    a.object_id = e.object_id
    AND e.is_primary_key = 1
Left outer JOIN
    sys.index_columns as f
ON
    a.object_id = f.object_id
    AND a.column_id = f.column_id
WHERE
    b.type = 'U'
    AND c.name != 'sysname'
ORDER BY
    b.name,
    a.column_id</value>
  </data>
  <data name="DataBases" xml:space="preserve">
    <value>SELECT name FROM sys.databases ORDER BY database_id</value>
  </data>
  <assembly alias="System.Windows.Forms" name="System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" />
  <data name="DataTable_8468" type="System.Resources.ResXFileRef, System.Windows.Forms">
    <value>..\Resources\DataTable_8468.png;System.Drawing.Bitmap, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a</value>
  </data>
  <data name="Message1" xml:space="preserve">
    <value>SQLServerとの接続に失敗しました。</value>
  </data>
  <data name="Message2" xml:space="preserve">
    <value>SQLServerとの接続に失敗しました。既存の設定を使用して再接続します。</value>
  </data>
  <data name="Message3" xml:space="preserve">
    <value>接続情報が未設定です。設定画面を開きます。</value>
  </data>
  <data name="Message4" xml:space="preserve">
    <value>SQLServerとの接続が開かれていません。設定画面から接続情報を確認してください。</value>
  </data>
  <data name="Message5" xml:space="preserve">
    <value>更新が完了しました。</value>
  </data>
  <data name="Message6" xml:space="preserve">
    <value>更新に失敗しました。</value>
  </data>
  <data name="Message7" xml:space="preserve">
    <value>終了してよろしいですか？</value>
  </data>
  <data name="Message8" xml:space="preserve">
    <value>SQLServerとの接続を切断しました。</value>
  </data>
  <data name="Message9" xml:space="preserve">
    <value>SQLServerとの接続に成功しました。</value>
  </data>
  <data name="SSRICON" type="System.Resources.ResXFileRef, System.Windows.Forms">
    <value>..\Resources\VSNETWebServiceDynamicDiscovery_8215_16x.png;System.Drawing.Bitmap, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a</value>
  </data>
  <data name="Tables" xml:space="preserve">
    <value>select o.name as Name, i.Rows as 'Rows', count(s.column_id) as Columns from sysindexes i, sysobjects o inner join sys.columns s on s.object_id = o.id where o.xtype = 'U' and o.id = i.id and i.indid &lt; 2 and o.name &lt;&gt; 'dtproperties' group by o.name, i.Rows order by o.name</value>
  </data>
  <data name="VSNETWebServiceDynamicDiscovery_8215" type="System.Resources.ResXFileRef, System.Windows.Forms">
    <value>..\Resources\VSNETWebServiceDynamicDiscovery_8215.ico;System.Drawing.Icon, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a</value>
  </data>
</root>